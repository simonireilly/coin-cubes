[2021-10-31T11:53:27.820] [DEBUG] default - SST: 0.50.1
[2021-10-31T11:53:27.821] [DEBUG] default - CDK: 1.126.0
[2021-10-31T11:53:27.822] [INFO] default - Using stage: simonireilly-cloudguru-user
[2021-10-31T11:53:27.824] [INFO] default - [90mPreparing your SST app[39m
[2021-10-31T11:53:27.831] [INFO] default - [90mDetected tsconfig.json[39m
[2021-10-31T11:53:27.835] [INFO] default - [90mTranspiling source[39m
[2021-10-31T11:53:27.854] [INFO] default - [90mLinting source[39m
[2021-10-31T11:53:28.724] [INFO] default - [90mRunning type checker[39m
[2021-10-31T11:53:35.888] [DEBUG] core - synth {
  output: '.build/cdk.out',
  app: 'node .build/run.js',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2021-10-31T11:53:37.337] [TRACE] cdk - [90mBuilding Lambda function src/sockets/index.connect[39m

[2021-10-31T11:53:37.491] [TRACE] cdk - [90mBuilding Lambda function src/sockets/index.disconnect[39m

[2021-10-31T11:53:37.598] [TRACE] cdk - [90mBuilding Lambda function src/sockets/index.sendMessage[39m

[2021-10-31T11:53:37.819] [TRACE] cdk - [90mLinting Lambda function source[39m

[2021-10-31T11:53:38.680] [TRACE] cdk - [0m[0m
[0m[4m/home/simon/code/projects/coin-cubes/backend/src/sockets/index.ts[24m[0m
[0m  [2m41:59[22m  [33mwarning[39m  'event' is defined but never used  [2m@typescript-eslint/no-unused-vars[22m[0m
[0m[0m
[0m[33m[1mâœ– 1 problem (0 errors, 1 warning)[22m[39m[0m
[0m[33m[1m[22m[39m[0m

[2021-10-31T11:53:38.693] [TRACE] cdk - [90mType checking Lambda function source[39m

[2021-10-31T11:53:45.395] [INFO] default - [90mDeploying stacks[39m
[2021-10-31T11:53:45.396] [TRACE] core - Initial stack states: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2021-10-31T11:53:45.396] [TRACE] core - After update deploy statuses: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2021-10-31T11:53:45.397] [DEBUG] core - deploy stack: started simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:53:45.397] [DEBUG] core - deploy stack: get pre-deploy status
[2021-10-31T11:53:46.418] [DEBUG] core - deploy stack: get pre-deploy status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:53:46.419] [DEBUG] core - deploy stack: check template changed
[2021-10-31T11:53:47.076] [DEBUG] core - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/SSTMetadata
  ConnectionsTable916FDB22:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: simonireilly-cloudguru-user-backend-Connections
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Connections/Table/Resource
  ApiCD79AAA0:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: simonireilly-cloudguru-user-backend-Api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/Api/Resource
  ApiStage4697DF29:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      StageName: simonireilly-cloudguru-user
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiLogGroup1717FE17
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","eventType":"$context.eventType","routeKey":"$context.routeKey","status":$context.status,"integrationRequestId":"$context.awsEndpointRequestId","integrationStatus":"$context.integrationStatus","integrationLatency":"$context.integrationLatency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId","connectedAt":"$context.connectedAt","connectionId":"$context.connectionId"}
      AutoDeploy: true
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/Stage/Resource
  ApiLogGroup1717FE17:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/simonireilly-cloudguru-user-backend-Api-
            - Ref: ApiCD79AAA0
            - /simonireilly-cloudguru-user
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/LogGroup/Resource
  ApiconnectServiceRoleB38A655D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$connect/ServiceRole/Resource
  ApiconnectServiceRoleDefaultPolicy530B764C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11
              - >-
                arn:aws:s3:::simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11/*
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ''
                - - 'arn:'
                  - Ref: AWS::Partition
                  - ':execute-api:us-east-1:322567890963:'
                  - Ref: ApiCD79AAA0
                  - /simonireilly-cloudguru-user/POST/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConnectionsTable916FDB22
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - ConnectionsTable916FDB22
                        - Arn
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiconnectServiceRoleDefaultPolicy530B764C
      Roles:
        - Ref: ApiconnectServiceRoleB38A655D
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$connect/ServiceRole/DefaultPolicy/Resource
  Apiconnect6ADFCB1F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: >-
            AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3Bucket015C3185
        S3Key:
          Fn::Join:
            - ''
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48
      Role:
        Fn::GetAtt:
          - ApiconnectServiceRoleB38A655D
          - Arn
      Environment:
        Variables:
          tableName:
            Ref: ConnectionsTable916FDB22
          SST_DEBUG_SRC_PATH: .
          SST_DEBUG_SRC_HANDLER: src/sockets/index.connect
          SST_DEBUG_ENDPOINT: >-
            wss://0ps86nkiyi.execute-api.us-east-1.amazonaws.com/simonireilly-cloudguru-user
          SST_DEBUG_BUCKET_NAME: simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiconnectServiceRoleDefaultPolicy530B764C
      - ApiconnectServiceRoleB38A655D
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/$connect/Resource
      aws:asset:path: >-
        asset.aa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54ae.zip
      aws:asset:property: Code
  ApiconnectEventInvokeConfig04F8B351:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: Apiconnect6ADFCB1F
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$connect/EventInvokeConfig/Resource
  ApiRouteconnectsimonireillycloudguruuserbackendmystackApiRouteconnect8B2E0AD1PermissionCBF8E82B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Apiconnect6ADFCB1F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:322567890963:'
            - Ref: ApiCD79AAA0
            - /*/*$connect
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$connect/simonireillycloudguruuserbackendmystackApiRouteconnect8B2E0AD1-Permission
  ApiRouteconnectWebSocketIntegration82f8a41f8282fef6f9427d0f17671b505B9C9811:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Apiconnect6ADFCB1F
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$connect/WebSocketIntegration-82f8a41f8282fef6f9427d0f17671b50/Resource
  ApiRouteconnectB48BEBFF:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ApiRouteconnectWebSocketIntegration82f8a41f8282fef6f9427d0f17671b505B9C9811
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/Route_$connect/Resource
  ApidisconnectServiceRole73693786:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/ServiceRole/Resource
  ApidisconnectServiceRoleDefaultPolicy37A097B3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11
              - >-
                arn:aws:s3:::simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11/*
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ''
                - - 'arn:'
                  - Ref: AWS::Partition
                  - ':execute-api:us-east-1:322567890963:'
                  - Ref: ApiCD79AAA0
                  - /simonireilly-cloudguru-user/POST/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConnectionsTable916FDB22
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - ConnectionsTable916FDB22
                        - Arn
                    - /*
        Version: '2012-10-17'
      PolicyName: ApidisconnectServiceRoleDefaultPolicy37A097B3
      Roles:
        - Ref: ApidisconnectServiceRole73693786
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/ServiceRole/DefaultPolicy/Resource
  ApidisconnectCB51A101:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: >-
            AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3Bucket015C3185
        S3Key:
          Fn::Join:
            - ''
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48
      Role:
        Fn::GetAtt:
          - ApidisconnectServiceRole73693786
          - Arn
      Environment:
        Variables:
          tableName:
            Ref: ConnectionsTable916FDB22
          SST_DEBUG_SRC_PATH: .
          SST_DEBUG_SRC_HANDLER: src/sockets/index.disconnect
          SST_DEBUG_ENDPOINT: >-
            wss://0ps86nkiyi.execute-api.us-east-1.amazonaws.com/simonireilly-cloudguru-user
          SST_DEBUG_BUCKET_NAME: simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApidisconnectServiceRoleDefaultPolicy37A097B3
      - ApidisconnectServiceRole73693786
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/Resource
      aws:asset:path: >-
        asset.aa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54ae.zip
      aws:asset:property: Code
  ApidisconnectEventInvokeConfig00A98405:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApidisconnectCB51A101
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/EventInvokeConfig/Resource
  ApiRoutedisconnectsimonireillycloudguruuserbackendmystackApiRoutedisconnectD51D8C57PermissionE795506B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApidisconnectCB51A101
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:322567890963:'
            - Ref: ApiCD79AAA0
            - /*/*$disconnect
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$disconnect/simonireillycloudguruuserbackendmystackApiRoutedisconnectD51D8C57-Permission
  ApiRoutedisconnectWebSocketIntegration551cb29f6266cb5deb48440be0e36d932F787D96:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - ApidisconnectCB51A101
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$disconnect/WebSocketIntegration-551cb29f6266cb5deb48440be0e36d93/Resource
  ApiRoutedisconnectA45E960F:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: $disconnect
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ApiRoutedisconnectWebSocketIntegration551cb29f6266cb5deb48440be0e36d932F787D96
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$disconnect/Resource
  ApisendMessageServiceRole7306D794:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/ServiceRole/Resource
  ApisendMessageServiceRoleDefaultPolicy3B45EA2A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11
              - >-
                arn:aws:s3:::simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11/*
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ''
                - - 'arn:'
                  - Ref: AWS::Partition
                  - ':execute-api:us-east-1:322567890963:'
                  - Ref: ApiCD79AAA0
                  - /simonireilly-cloudguru-user/POST/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConnectionsTable916FDB22
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - ConnectionsTable916FDB22
                        - Arn
                    - /*
        Version: '2012-10-17'
      PolicyName: ApisendMessageServiceRoleDefaultPolicy3B45EA2A
      Roles:
        - Ref: ApisendMessageServiceRole7306D794
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/ServiceRole/DefaultPolicy/Resource
  ApisendMessage1EC1CD34:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: >-
            AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3Bucket015C3185
        S3Key:
          Fn::Join:
            - ''
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48
      Role:
        Fn::GetAtt:
          - ApisendMessageServiceRole7306D794
          - Arn
      Environment:
        Variables:
          tableName:
            Ref: ConnectionsTable916FDB22
          SST_DEBUG_SRC_PATH: .
          SST_DEBUG_SRC_HANDLER: src/sockets/index.sendMessage
          SST_DEBUG_ENDPOINT: >-
            wss://0ps86nkiyi.execute-api.us-east-1.amazonaws.com/simonireilly-cloudguru-user
          SST_DEBUG_BUCKET_NAME: simonireilly-cloudguru-user-backen-bucket83908e77-fx78fna7zv11
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApisendMessageServiceRoleDefaultPolicy3B45EA2A
      - ApisendMessageServiceRole7306D794
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/Resource
      aws:asset:path: >-
        asset.aa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54ae.zip
      aws:asset:property: Code
  ApisendMessageEventInvokeConfig862D22EF:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApisendMessage1EC1CD34
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/EventInvokeConfig/Resource
  ApiRoutesendMessagesimonireillycloudguruuserbackendmystackApiRoutesendMessage4101213CPermissionABED4E2A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApisendMessage1EC1CD34
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:322567890963:'
            - Ref: ApiCD79AAA0
            - /*/*sendMessage
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_sendMessage/simonireillycloudguruuserbackendmystackApiRoutesendMessage4101213C-Permission
  ApiRoutesendMessageWebSocketIntegration9fb55b9ddc62708d76952cea5444c337C4B823E8:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - ApisendMessage1EC1CD34
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_sendMessage/WebSocketIntegration-9fb55b9ddc62708d76952cea5444c337/Resource
  ApiRoutesendMessage4EBCC672:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: sendMessage
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ApiRoutesendMessageWebSocketIntegration9fb55b9ddc62708d76952cea5444c337C4B823E8
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_sendMessage/Resource
Parameters:
  AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3Bucket015C3185:
    Type: String
    Description: >-
      S3 bucket for asset
      "aa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54ae"
  AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeS3VersionKey1303BE48:
    Type: String
    Description: >-
      S3 key for asset version
      "aa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54ae"
  AssetParametersaa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54aeArtifactHashFABCE49B:
    Type: String
    Description: >-
      Artifact hash for asset
      "aa0cf9d40164c5a34b4e1f5256142e9132d189a516a22f8587d46e1f39ca54ae"
Outputs:
  ApiEndpoint:
    Value:
      Fn::Join:
        - ''
        - - wss://
          - Ref: ApiCD79AAA0
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /simonireilly-cloudguru-user

[2021-10-31T11:53:47.076] [DEBUG] core - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/SSTMetadata
  ConnectionsTable916FDB22:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      TableName: simonireilly-cloudguru-user-backend-Connections
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Connections/Table/Resource
  ApiCD79AAA0:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: simonireilly-cloudguru-user-backend-Api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/Api/Resource
  ApiStage4697DF29:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      StageName: simonireilly-cloudguru-user
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiLogGroup1717FE17
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","eventType":"$context.eventType","routeKey":"$context.routeKey","status":$context.status,"integrationRequestId":"$context.awsEndpointRequestId","integrationStatus":"$context.integrationStatus","integrationLatency":"$context.integrationLatency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId","connectedAt":"$context.connectedAt","connectionId":"$context.connectionId"}
      AutoDeploy: true
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/Stage/Resource
  ApiLogGroup1717FE17:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/simonireilly-cloudguru-user-backend-Api-
            - Ref: ApiCD79AAA0
            - /simonireilly-cloudguru-user
      RetentionInDays: 731
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/LogGroup/Resource
  ApiconnectServiceRoleB38A655D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$connect/ServiceRole/Resource
  ApiconnectServiceRoleDefaultPolicy530B764C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ''
                - - 'arn:'
                  - Ref: AWS::Partition
                  - ':execute-api:us-east-1:322567890963:'
                  - Ref: ApiCD79AAA0
                  - /simonireilly-cloudguru-user/POST/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConnectionsTable916FDB22
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - ConnectionsTable916FDB22
                        - Arn
                    - /*
        Version: '2012-10-17'
      PolicyName: ApiconnectServiceRoleDefaultPolicy530B764C
      Roles:
        - Ref: ApiconnectServiceRoleB38A655D
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$connect/ServiceRole/DefaultPolicy/Resource
  Apiconnect6ADFCB1F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: >-
            AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3Bucket29E7DAC1
        S3Key:
          Fn::Join:
            - ''
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B
      Role:
        Fn::GetAtt:
          - ApiconnectServiceRoleB38A655D
          - Arn
      Environment:
        Variables:
          tableName:
            Ref: ConnectionsTable916FDB22
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      Handler: src/sockets/index.connect
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiconnectServiceRoleDefaultPolicy530B764C
      - ApiconnectServiceRoleB38A655D
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/$connect/Resource
      aws:asset:path: asset.8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22
      aws:asset:property: Code
  ApiRouteconnectsimonireillycloudguruuserbackendmystackApiRouteconnect8B2E0AD1PermissionCBF8E82B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Apiconnect6ADFCB1F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:322567890963:'
            - Ref: ApiCD79AAA0
            - /*/*$connect
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$connect/simonireillycloudguruuserbackendmystackApiRouteconnect8B2E0AD1-Permission
  ApiRouteconnectWebSocketIntegration82f8a41f8282fef6f9427d0f17671b505B9C9811:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Apiconnect6ADFCB1F
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$connect/WebSocketIntegration-82f8a41f8282fef6f9427d0f17671b50/Resource
  ApiRouteconnectB48BEBFF:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ApiRouteconnectWebSocketIntegration82f8a41f8282fef6f9427d0f17671b505B9C9811
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/Route_$connect/Resource
  ApidisconnectServiceRole73693786:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/ServiceRole/Resource
  ApidisconnectServiceRoleDefaultPolicy37A097B3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ''
                - - 'arn:'
                  - Ref: AWS::Partition
                  - ':execute-api:us-east-1:322567890963:'
                  - Ref: ApiCD79AAA0
                  - /simonireilly-cloudguru-user/POST/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConnectionsTable916FDB22
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - ConnectionsTable916FDB22
                        - Arn
                    - /*
        Version: '2012-10-17'
      PolicyName: ApidisconnectServiceRoleDefaultPolicy37A097B3
      Roles:
        - Ref: ApidisconnectServiceRole73693786
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/ServiceRole/DefaultPolicy/Resource
  ApidisconnectCB51A101:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: >-
            AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3Bucket29E7DAC1
        S3Key:
          Fn::Join:
            - ''
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B
      Role:
        Fn::GetAtt:
          - ApidisconnectServiceRole73693786
          - Arn
      Environment:
        Variables:
          tableName:
            Ref: ConnectionsTable916FDB22
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      Handler: src/sockets/index.disconnect
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApidisconnectServiceRoleDefaultPolicy37A097B3
      - ApidisconnectServiceRole73693786
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/$disconnect/Resource
      aws:asset:path: asset.8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22
      aws:asset:property: Code
  ApiRoutedisconnectsimonireillycloudguruuserbackendmystackApiRoutedisconnectD51D8C57PermissionE795506B:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApidisconnectCB51A101
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:322567890963:'
            - Ref: ApiCD79AAA0
            - /*/*$disconnect
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$disconnect/simonireillycloudguruuserbackendmystackApiRoutedisconnectD51D8C57-Permission
  ApiRoutedisconnectWebSocketIntegration551cb29f6266cb5deb48440be0e36d932F787D96:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - ApidisconnectCB51A101
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$disconnect/WebSocketIntegration-551cb29f6266cb5deb48440be0e36d93/Resource
  ApiRoutedisconnectA45E960F:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: $disconnect
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ApiRoutedisconnectWebSocketIntegration551cb29f6266cb5deb48440be0e36d932F787D96
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_$disconnect/Resource
  ApisendMessageServiceRole7306D794:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/ServiceRole/Resource
  ApisendMessageServiceRoleDefaultPolicy3B45EA2A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ''
                - - 'arn:'
                  - Ref: AWS::Partition
                  - ':execute-api:us-east-1:322567890963:'
                  - Ref: ApiCD79AAA0
                  - /simonireilly-cloudguru-user/POST/*
          - Action: dynamodb:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ConnectionsTable916FDB22
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - ConnectionsTable916FDB22
                        - Arn
                    - /*
        Version: '2012-10-17'
      PolicyName: ApisendMessageServiceRoleDefaultPolicy3B45EA2A
      Roles:
        - Ref: ApisendMessageServiceRole7306D794
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/ServiceRole/DefaultPolicy/Resource
  ApisendMessage1EC1CD34:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: >-
            AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3Bucket29E7DAC1
        S3Key:
          Fn::Join:
            - ''
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - '||'
                      - Ref: >-
                          AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B
      Role:
        Fn::GetAtt:
          - ApisendMessageServiceRole7306D794
          - Arn
      Environment:
        Variables:
          tableName:
            Ref: ConnectionsTable916FDB22
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
      Handler: src/sockets/index.sendMessage
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApisendMessageServiceRoleDefaultPolicy3B45EA2A
      - ApisendMessageServiceRole7306D794
    Metadata:
      aws:cdk:path: simonireilly-cloudguru-user-backend-my-stack/Api/sendMessage/Resource
      aws:asset:path: asset.8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22
      aws:asset:property: Code
  ApiRoutesendMessagesimonireillycloudguruuserbackendmystackApiRoutesendMessage4101213CPermissionABED4E2A:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApisendMessage1EC1CD34
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:322567890963:'
            - Ref: ApiCD79AAA0
            - /*/*sendMessage
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_sendMessage/simonireillycloudguruuserbackendmystackApiRoutesendMessage4101213C-Permission
  ApiRoutesendMessageWebSocketIntegration9fb55b9ddc62708d76952cea5444c337C4B823E8:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - ApisendMessage1EC1CD34
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_sendMessage/WebSocketIntegration-9fb55b9ddc62708d76952cea5444c337/Resource
  ApiRoutesendMessage4EBCC672:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: sendMessage
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: >-
                ApiRoutesendMessageWebSocketIntegration9fb55b9ddc62708d76952cea5444c337C4B823E8
    Metadata:
      aws:cdk:path: >-
        simonireilly-cloudguru-user-backend-my-stack/Api/Route_sendMessage/Resource
Parameters:
  AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3Bucket29E7DAC1:
    Type: String
    Description: >-
      S3 bucket for asset
      "8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22"
  AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22S3VersionKey7C6E549B:
    Type: String
    Description: >-
      S3 key for asset version
      "8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22"
  AssetParameters8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22ArtifactHash0931C54B:
    Type: String
    Description: >-
      Artifact hash for asset
      "8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22"
Outputs:
  ApiEndpoint:
    Value:
      Fn::Join:
        - ''
        - - wss://
          - Ref: ApiCD79AAA0
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /simonireilly-cloudguru-user

[2021-10-31T11:53:47.076] [DEBUG] core - deploy stack: run cdk deploy
[2021-10-31T11:53:47.080] [DEBUG] core - deploy stack: poll stack status
[2021-10-31T11:53:47.530] [TRACE] core - deploy stack: run cdk deploy: stderr: simonireilly-cloudguru-user-backend-my-stack: deploying...

[2021-10-31T11:53:47.560] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:53:47.560] [DEBUG] core - deploy stack: poll stack status: unknown
[2021-10-31T11:53:48.930] [TRACE] core - deploy stack: run cdk deploy: stderr: [0%] start: Publishing 8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22:current

[2021-10-31T11:53:50.274] [TRACE] core - deploy stack: run cdk deploy: stderr: [100%] success: Published 8127a28f65645a1dce3d45bff015dc95921a6ed83929bb5c5f5a970968088c22:current

[2021-10-31T11:53:50.479] [TRACE] core - deploy stack: run cdk deploy: stderr: simonireilly-cloudguru-user-backend-my-stack: creating CloudFormation changeset...

[2021-10-31T11:53:51.358] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:53:51.359] [DEBUG] core - deploy stack: poll stack status: unknown
[2021-10-31T11:53:55.091] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:53:55.091] [DEBUG] core - deploy stack: poll stack status: unknown
[2021-10-31T11:53:58.672] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:53:58.673] [DEBUG] core - deploy stack: poll stack status: unknown
[2021-10-31T11:54:02.462] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:54:02.462] [DEBUG] core - deploy stack: poll stack status: unknown
[2021-10-31T11:54:06.247] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2021-10-31T11:51:05.538Z
}
[2021-10-31T11:54:06.247] [DEBUG] core - deploy stack: poll stack status: unknown
[2021-10-31T11:54:10.024] [DEBUG] core - deploy stack: poll stack status: {
  StackStatus: 'UPDATE_IN_PROGRESS',
  LastUpdatedTime: 2021-10-31T11:54:07.856Z
}
[2021-10-31T11:54:10.024] [DEBUG] core - deploy stack: poll stack status: cf update started
[2021-10-31T11:54:10.025] [DEBUG] core - deploy stack: done simonireilly-cloudguru-user-backend-my-stack {
  status: 'deploying',
  statusReason: undefined,
  account: '322567890963',
  outputs: {
    ApiEndpoint: 'wss://48nzvn14m0.execute-api.us-east-1.amazonaws.com/simonireilly-cloudguru-user'
  },
  exports: {}
}
[2021-10-31T11:54:10.026] [TRACE] core - After deploy stacks: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[],"outputs":{"ApiEndpoint":"wss://48nzvn14m0.execute-api.us-east-1.amazonaws.com/simonireilly-cloudguru-user"},"exports":{}}]
[2021-10-31T11:54:10.027] [INFO] default - Checking deploy status...
[2021-10-31T11:54:10.032] [DEBUG] core - deploy stack: run cdk deploy: exited with code null
[2021-10-31T11:54:15.028] [TRACE] core - Initial stack states: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[],"outputs":{"ApiEndpoint":"wss://48nzvn14m0.execute-api.us-east-1.amazonaws.com/simonireilly-cloudguru-user"},"exports":{}}]
[2021-10-31T11:54:15.029] [DEBUG] core - Fetching stack events simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:15.958] [INFO] core - simonireilly-cloudguru-user-backend-my-stack | [0mUPDATE_IN_PROGRESS[0m | AWS::CloudFormation::Stack | [0m[1msimonireilly-cloudguru-user-backend-my-stack[22m[0m 
[2021-10-31T11:54:15.959] [DEBUG] core - Checking stack status simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:16.907] [TRACE] core - After update deploy statuses: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:16.907] [TRACE] core - After deploy stacks: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:21.907] [TRACE] core - Initial stack states: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:21.908] [DEBUG] core - Fetching stack events simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:23.248] [DEBUG] core - Checking stack status simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:24.002] [TRACE] core - After update deploy statuses: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:24.003] [TRACE] core - After deploy stacks: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:24.004] [INFO] default - Checking deploy status...
[2021-10-31T11:54:29.005] [TRACE] core - Initial stack states: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:29.006] [DEBUG] core - Fetching stack events simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:30.029] [DEBUG] core - Checking stack status simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:30.723] [TRACE] core - After update deploy statuses: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:30.724] [TRACE] core - After deploy stacks: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:30.724] [INFO] default - Checking deploy status...
[2021-10-31T11:54:35.726] [TRACE] core - Initial stack states: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:35.726] [DEBUG] core - Fetching stack events simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:36.915] [DEBUG] core - Checking stack status simonireilly-cloudguru-user-backend-my-stack
[2021-10-31T11:54:37.381] [TRACE] core - After update deploy statuses: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:37.382] [TRACE] core - After deploy stacks: [{"name":"simonireilly-cloudguru-user-backend-my-stack","status":"deploying","dependencies":[],"account":"322567890963","region":"us-east-1","startedAt":1635681250026,"events":[{"eventId":"40f55d30-3a41-11ec-8bd4-0ef3e3db7079","timestamp":"2021-10-31T11:54:07.856Z","resourceType":"AWS::CloudFormation::Stack","resourceStatus":"UPDATE_IN_PROGRESS","resourceStatusReason":"User Initiated","logicalResourceId":"simonireilly-cloudguru-user-backend-my-stack"}],"eventsFirstEventAt":"2021-10-31T11:54:02.856Z","outputs":{},"exports":{}}]
[2021-10-31T11:54:37.382] [INFO] default - Checking deploy status...
